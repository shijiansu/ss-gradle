buildscript { // Configuration phase, similar as initscript for Initialization phase
    repositories {
        gradlePluginPortal() // looks at https://plugins.gradle.org/m2/
        // maven { url "https://plugins.gradle.org/m2/" }
    }
    dependencies {
        classpath "org.springframework.boot:spring-boot-gradle-plugin:2.4.9"
        classpath "io.spring.gradle:dependency-management-plugin:1.0.11.RELEASE"
        classpath "com.diffplug.spotless:spotless-plugin-gradle:5.14.2"
        classpath "org.sonarsource.scanner.gradle:sonarqube-gradle-plugin:3.3"
        classpath "org.sonatype.gradle.plugins:scan-gradle-plugin:2.0.12"
    }
}

plugins {
    // id 'org.springframework.boot' version '2.4.9'
    // id 'io.spring.dependency-management' version '1.0.11.RELEASE'
}

group = 'su.shijian.gradle.plugin'
version = '0.0.1-SNAPSHOT'

repositories {
    mavenCentral()
}

tasks.wrapper {
    gradleVersion = '7.1.1'
}

task analyzeTasks {
    ext.start = { pluginId ->
        // https://stackoverflow.com/a/36933260
        def tasksBefore = [], tasksAfter = []
        project.tasks.each { tasksBefore.add(it.name) } // get all tasks

        apply(plugin: pluginId) // apply plugin

        project.tasks.each { tasksAfter.add(it.name) } // get all tasks
        tasksAfter.removeAll(tasksBefore) // get the difference

        println "${pluginId}: ${tasksAfter}"
    }

    doLast {
        // pass the variable
        start(pluginId) // example: ./gradlew analyzeTasks -PpluginId=war
    }
}

println ""
println "== common =="
analyzeTasks.start "base"
analyzeTasks.start "idea"
analyzeTasks.start "java-library"
analyzeTasks.start "maven-publish"

println ""
println "== spring =="
analyzeTasks.start "org.springframework.boot"
analyzeTasks.start "io.spring.dependency-management"

println ""
println "== quality =="
analyzeTasks.start "jacoco"
analyzeTasks.start "com.diffplug.spotless"
analyzeTasks.start "org.sonarqube"
analyzeTasks.start "org.sonatype.gradle.plugins.scan"
